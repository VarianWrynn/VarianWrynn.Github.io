

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://varianwrynn.github.io/</id>
  <title>Lee.Wang</title>
  <subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle>
  <updated>2021-08-05T15:30:12+08:00</updated>
  <author>
    <name>Varian.Wrynn</name>
    <uri>https://varianwrynn.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://varianwrynn.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="zh-CN"
    href="https://varianwrynn.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Varian.Wrynn </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Github入门笔记-PartF-- Git Ignore</title>
    <link href="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartF-Git_Ignore/" rel="alternate" type="text/html" title="Github入门笔记-PartF-- Git Ignore" />
    <published>2021-08-05T12:06:43+08:00</published>
  
    <updated>2021-08-05T12:06:43+08:00</updated>
  
    <id>https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartF-Git_Ignore/</id>
    <content src="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartF-Git_Ignore/" />
    <author>
      <name>Lee</name>
    </author>

  
    
    <category term="技术" />
    
    <category term="Github" />
    
  

  
    <summary>
      





      How to add Gitignore on Visual Studio


  Github入门笔记-PartF  Git Ignore的添加
    
      Git-ignore in VS2019
        
          Using Visual Studio to add a .gitignore
          Stop tracking files that should be ignored
          Wrapping Up
        
      
      . References &amp;amp; Connection
      . 文档修订记录
    
  


Git-ignore in VS2019

Using Visual Studio to add a .gitignore

Open Visual Studi...
    </summary>
  

  </entry>

  
  <entry>
    <title>Github入门笔记-PartD--Git Merge</title>
    <link href="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartD-Git_Merge/" rel="alternate" type="text/html" title="Github入门笔记-PartD--Git Merge" />
    <published>2021-08-03T12:06:43+08:00</published>
  
    <updated>2021-08-03T12:06:43+08:00</updated>
  
    <id>https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartD-Git_Merge/</id>
    <content src="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartD-Git_Merge/" />
    <author>
      <name>Lee</name>
    </author>

  
    
    <category term="技术" />
    
    <category term="Github" />
    
  

  
    <summary>
      





      摘录：《Github入门与实践》 4.2章节。 Github入门笔记， Git Merge的参数解释。


  Github入门笔记-PartD  Git Merge 参数解释
    
      1. 基本操作
      2.  Git 合并时 --no-ff 的作用
      3. 小结
      4. 相关问题
        
          Pulling without specifying how to reconcile divergent branches is discouraged
        
      
      5. References &amp;amp; Connection
      6. 文档修订记录
    
  


1. 基本操作


  摘录：《Github入门与实践》 4.2章节。


分支 feature-A 已经实现完毕...
    </summary>
  

  </entry>

  
  <entry>
    <title>Github入门笔记-PartB</title>
    <link href="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartB/" rel="alternate" type="text/html" title="Github入门笔记-PartB" />
    <published>2021-08-01T12:06:43+08:00</published>
  
    <updated>2021-08-01T12:06:43+08:00</updated>
  
    <id>https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartB/</id>
    <content src="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartB/" />
    <author>
      <name>Lee</name>
    </author>

  
    
    <category term="技术" />
    
    <category term="Github" />
    
  

  
    <summary>
      





      [toc]

这篇是Github入门笔记的第二部分，原先的文章章节太长导致马克飞象和Evernote之间的同步比较慢，所以拆分成两篇。


  Github入门笔记-PartB
    
      7.  完整命令参考
        
          Pull request on Github
        
      
      8. 从远程仓库获取
        
          8.1 git clone——获取远程仓库
          8.2 git pull -- 获取最新的远程仓库分支
        
      
      9. Github日常操作遇到问题记录
        
          9.1 Git Clone之后提示无仓库信息
          9.2 为什么做了大量代码调整，Github上却只有一个commit?
  ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Github入门笔记-PartA</title>
    <link href="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartA/" rel="alternate" type="text/html" title="Github入门笔记-PartA" />
    <published>2021-08-01T12:06:43+08:00</published>
  
    <updated>2021-08-01T12:06:43+08:00</updated>
  
    <id>https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartA/</id>
    <content src="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartA/" />
    <author>
      <name>Lee</name>
    </author>

  
    
    <category term="技术" />
    
    <category term="Github" />
    
  

  
    <summary>
      





      
  图中只显示了一般的使用流程。实际上，所有仓库之间都可以进行 push 和 pull。即便不通过 GitHub，开发者 A 也可以直接向开发者 B 的仓库进行 push 或 pull。因此在使用前如果不事先制定规范，初学者往往会搞不清最新的源代码保存在哪里，导致开发失去控制。不过不用担心，只要各位随着本书的讲解亲自动手尝试，想掌握要领并不是一件难事。



  Github入门笔记-PartA
    
      1. 为什么Github受欢迎
      2. 流程描述
        
          2.1 fork vs. clone
          2.2 小青的解释
          2.3 工作区/暂存区/仓库/远程仓库/快照
        
      
      3. Developers化学反应- Pull Request
        
 ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Github入门笔记-PartC-cherry-pick</title>
    <link href="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartC-cherry-pick/" rel="alternate" type="text/html" title="Github入门笔记-PartC-cherry-pick" />
    <published>2021-05-07T14:06:43+08:00</published>
  
    <updated>2021-05-07T14:06:43+08:00</updated>
  
    <id>https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartC-cherry-pick/</id>
    <content src="https://varianwrynn.github.io/posts/Github%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0-PartC-cherry-pick/" />
    <author>
      <name>Lee （摘自 阮一峰的博客）</name>
    </author>

  
    
    <category term="技术" />
    
    <category term="Github" />
    
  

  
    <summary>
      





      Github入门笔记-PartC-cherry-pick

对于多分支的代码库，将代码从一个分支转移到另一个分支是常见需求。

这时分两种情况。一种情况是，你需要另一个分支的所有代码变动，那么就采用合并（git merge）。另一种情况是，你只需要部分代码变动（某几个提交），这时可以采用 Cherry pick。


  Github入门笔记-PartC  git cherry-pick 教程
    
      1. 基本用法
      2. 转移多个提交
      3. 配置项
      4. 代码冲突
      5. 移到另一个代码库
      6. References &amp;amp; Connection
      7. 文档修订记录
    
  




1. 基本用法

git cherry-pick命令的作用，就是将指定的提交（commit）应用于其他分支...
    </summary>
  

  </entry>

</feed>


